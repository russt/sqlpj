%include build_setup.defs
#please remove this dependency after pkgconfig object is finished:
%include dbprops.defs

{
    PL_PACKAGE = $SQLCOLUMN_PACKAGE
    %include $PL_PACKAGE.defs
    perl/prlobj.ptpl                 /$PL_PACKAGE.pm
}

{
    PL_PACKAGE = $SQLTABLE_PACKAGE
    %include $PL_PACKAGE.defs
    perl/prlobj.ptpl                 /$PL_PACKAGE.pm
}

{
    PL_PACKAGE = $SQLTABLES_PACKAGE
    %include $PL_PACKAGE.defs
    perl/prlobj.ptpl                 /$PL_PACKAGE.pm
}

{
    #configuration parameters:
    PL_PACKAGE = $PKGCONFIG_PACKAGE
    %include $PL_PACKAGE.defs
    perl/prlobj.ptpl                 /$PL_PACKAGE.pm
}

{
    #this is sqlpj implementation:
    PL_PACKAGE = $PSQLIMPL_PACKAGE
    %include psqlImpl.defs
    perl/prlobj.ptpl                 /$PL_PACKAGE.pm
}

{
    #main program:
    PL_PACKAGE = $TESTDBI_PACKAGE
    %include psql.defs
    perl/prlskel.ptpl                 /$PL_PACKAGE.pl
}

#generate configuration properties for various database instances:
%include dbprops.cg

#check for undefs:
%shell egrep "{=|:undef" `walkdir -f -l 0 $CG_ROOT`

#if matches found (i.e., grep status is zero)...
%ifnot $CG_SHELL_STATUS %echo Found undefined varibles - please correct.
%ifnot $CG_SHELL_STATUS CG_SHELL_STATUS = 1

#create symlinks for prlskel programs:
TESTDBI_CMD = $TESTDBI_PACKAGE
%ifndef NO_SYMLINKS %echo creating prlskel links ...
%ifndef NO_SYMLINKS %shell cd $CG_ROOT; rm -f $TESTDBI_CMD; ln -s `fwhich prlskel` $TESTDBI_CMD
